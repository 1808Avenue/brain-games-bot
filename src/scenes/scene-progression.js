import { Scenes } from 'telegraf';
import preparingDataForGameProgression from '../games/game-progression.js';

// ROUND 1
export const progressRound1 = new Scenes.BaseScene('progression-round1');
const [question1, answer1] = preparingDataForGameProgression();
progressRound1.enter(async (ctx) => {
  await ctx.reply('–ö–∞–∫–æ–µ —á–∏—Å–ª–æ –≤ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–∏ –ø—Ä–æ–ø—É—â–µ–Ω–æ?');
  await ctx.reply(`${question1}`);
  await ctx.reply('–í–∞—à –æ—Ç–≤–µ—Ç:');
});
progressRound1.on('text', async (ctx) => {
  if (ctx.message.text !== answer1) {
    await ctx.reply('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.');
    await ctx.reply('–ò–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–µ–Ω–∞!');
    await ctx.scene.leave();
  } else {
    await ctx.reply('–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!');
    await ctx.scene.enter('progression-round2');
  }
});

// ROUND 2
export const progressRound2 = new Scenes.BaseScene('progression-round2');
const [question2, answer2] = preparingDataForGameProgression();
progressRound2.enter(async (ctx) => {
  await ctx.reply('–ö–∞–∫–æ–µ —á–∏—Å–ª–æ –≤ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–∏ –ø—Ä–æ–ø—É—â–µ–Ω–æ?');
  await ctx.reply(`${question2}`);
  await ctx.reply('–í–∞—à –æ—Ç–≤–µ—Ç:');
});
progressRound2.on('text', async (ctx) => {
  if (ctx.message.text !== answer2) {
    await ctx.reply('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.');
    await ctx.reply('–ò–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–µ–Ω–∞!');
    await ctx.scene.leave();
  } else {
    await ctx.reply('–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!');
    await ctx.scene.enter('progression-round3');
  }
});

// ROUND 3
export const progressRound3 = new Scenes.BaseScene('progression-round3');
const [question3, answer3] = preparingDataForGameProgression();
progressRound3.enter(async (ctx) => {
  await ctx.reply('–ö–∞–∫–æ–µ —á–∏—Å–ª–æ –≤ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–∏ –ø—Ä–æ–ø—É—â–µ–Ω–æ?');
  await ctx.reply(`${question3}`);
  await ctx.reply('–í–∞—à –æ—Ç–≤–µ—Ç:');
});
progressRound3.on('text', async (ctx) => {
  if (ctx.message.text !== answer3) {
    await ctx.reply('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.');
    await ctx.reply('–ò–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–µ–Ω–∞!');
    await ctx.scene.leave();
  } else {
    await ctx.reply('–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!');
    await ctx.reply('–ü–æ–∑–¥—Ä–∞–≤–ª—è—é –≤—ã –ø–æ–±–µ–¥–∏–ª–∏!');
    await ctx.reply('üèÜ');
    await ctx.scene.leave();
  }
});
